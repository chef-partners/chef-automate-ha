{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "objectId": {
      "type": "securestring",
      "defaultValue": "44b29aa9-ccd0-4314-aaa0-fd4df282b906",
      "metadata": {
        "description": "Object Id of the AAD user or service principal that will have access to the vault. Available from the Get-AzureRMADUser or the Get-AzureRMADServicePrincipal cmdlets"
      }
    },
    "vaultSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the vault"
      }
    },
    "adminUsername": {
      "defaultValue": "chefuser",
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "sshKeyData": {
      "defaultValue": "",
      "type": "securestring",
      "metadata": {
        "description": "SSH rsa public key file as a string."
      }
    },
    "vmSize": {
      "defaultValue": "Standard_DS2_v2",
      "allowedValues": [
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_F4s",
        "Standard_F8s",
        "Standard_F16s"
      ],
      "type": "string",
      "metadata": {
        "description": "size of the Virtual Machine."
      }
    },
    "chefServerDnsPrefix": {
      "type": "string",
      "defaultValue": "chefserver",
      "metadata": {
        "description": "dens name for chef server"
      }
    },
    "chefAutomateDnsPrefix": {
      "type": "string",
      "defaultValue": "chefautomate",
      "metadata": {
        "description": "chef automate dns name"
      }
    },
    "firstName": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "administrator user for chef automate"
      }
    },
    "lastName": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "administrator user for chef automate"
      }
    },
    "emailId": {
      "defaultValue": "user@password.com",
      "type": "string",
      "metadata": {
        "description": "emaild for chef automate"
      }
    },
    "organizationName": {
      "defaultValue": "chef",
      "type": "string",
      "metadata": {
        "description": "Organization name for chef automate"
      }
    },
    "appID": {
      "defaultValue": "",
      "minLength": 1,
      "type": "securestring",
      "metadata": {
        "description": "servicePrinciple"
      }
    },
    "password": {
      "defaultValue": "",
      "minLength": 1,
      "type": "securestring",
      "metadata": {
        "description": "password"
      }
    },
    "baseUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/chef-partners/chef-automate-ha/master/",
      "metadata": {
        "description": "Base github URL for azure templates"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "customScriptsShouldDebug": {
      "type" : "bool",
      "defaultValue": false,
      "metadata": {
          "description": "Set this to bool('true') to increase log verbosity, e.g., in CustomScripts"
      }
    },
    "customScriptsTimestamp": { 
      "type": "int",
      "defaultValue": 1529406265,
      "metadata": {
        "description": "ONLY change this to a new timestamp if you want the CustomScripts to be run more than once, which is the default"
      }
    }
  },
  "variables": {
    "keyvaultSettings": {
      "keyVaultApiVersion": "2015-06-01",
      "keyVaultName": "[concat('chef-key',substring(variables('prefix') ,0 ,5))]",
      "tenantId": "[subscription().tenantId]",
      "dbPasswordValue": "[concat('chv-',substring(variables('prefix'),0,10),'-dbp')]",
      "replicationPasswordValue": "[concat('chv-',substring(variables('prefix'),0,11),'-rpp')]",
      "clusterTokenValue": "[concat('chv-',substring(variables('prefix'),0,12),'-ctt')]",
      "clusterNameValue": "[concat('chef-',substring(variables('prefix'),0,8))]",
      "location": "[parameters('location')]",
      "objectId": "[parameters('objectId')]",
      "vaultSku": "[parameters('vaultSku')]",
      "dbPassword": "dbPassword",
      "replicationPassword": "replicationPassword",
      "clusterToken": "clusterToken",
      "clusterName": "clusterName",
      "appID": "[parameters('appID')]",
      "password": "[parameters('password')]"
    },
    "computeSettings": {
      "count": 7,
      "location": "[parameters('location')]",
      "computeApiVersion": "2016-04-30-preview",
      "adminUsername": "[parameters('adminUsername')]",
      "sshKeyData": "[parameters('sshKeyData')]",
      "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
      "chefServerUserName": "delivery",
      "managedDiskName": "dataDisk",
      "storageAccountType": "Premium_LRS",
      "diagStorageAccountType": "Standard_LRS",
      "diskCreateOption": "empty",
      "diskSizeGB": 50,
      "vmSize": "[parameters('vmSize')]",
      "imagePublisher": "Canonical",
      "imageOffer": "UbuntuServer",
      "ubuntuOSVersion": "16.04-LTS",
      "imageVersion": "latest",
      "chefBEAvailName": "be-avail",
      "leadercomputerName": "be0",
      "followercomputerName1": "be1",
      "followercomputerName2": "be2",
      "leaderExtensionName": "be0-ex0",
      "followerExtensionName1": "be-ex1",
      "followerExtensionName2": "be-ex2",
      "feComputerName0": "fe0",
      "feComputerName1": "fe1",
      "feComputerName2": "fe2",
      "feVmExtensionName0": "fe0-ex0",
      "feVmExtensionName1": "fe1-ex1",
      "feVmExtensionName2": "fe1-ex2",
      "chefFEAvailName": "fe-avail",
      "autoComputerName": "chefautomate",
      "automateComputerOsDiskSizeGB": 100,
      "chefAutoExtenName": "chef-auto-ex",
      "firstName": "[parameters('firstName')]",
      "lastName": "[parameters('lastName')]",
      "emailId": "[parameters('emailId')]",
      "organizationName": "[parameters('organizationName')]",
      "keyvaultId": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name, '/providers/Microsoft.KeyVault/vaults/', variables('keyvaultSettings').keyVaultName)]",
      "customScriptsDebugOption": "[if(equals(parameters('customScriptsShouldDebug'), bool('true')), '--debug', '')]",
      "_artifactsLocation": "[concat(variables('baseUrl'),'scripts')]",
      "customScriptsTimestamp":"[int(parameters('customScriptsTimestamp'))]"          
    },
    "storageSettings": {
      "location": "[parameters('location')]",
      "diagStorageAccName": "[concat('diagstr',substring(variables('prefix') ,0 ,5))]",
      "diagStorageAccountType": "Standard_LRS",
      "storageApiVersion": "2015-06-15"
    },
    "networkSettings": {
      "location": "[parameters('location')]",
      "networkApiVersion": "2015-06-15",
      "leaderNicName": "be-nic0",
      "followerNicName1": "be-nic1",
      "followerNicName2": "be-nic2",
      "feNicName0": "fe-nic0",
      "feNicName1": "fe-nic1",
      "feNicName2": "fe-nic2",
      "chefAutoNicName": "chefauto-nic",
      "feNsg": "fe-nsg",
      "beNsg": "be-nsg",
      "bePoolName1": "chef-ha-pool-fe",
      "bePoolName2": "chef-ha-pool-ssh-admin",
      "felbPublicIPAddressName": "fe-pip",
      "chefAutoPublicIPAddressName": "chefauto-pip",
      "virtualNetworkName": "chef-vnet",
      "addressPrefix": "10.0.0.0/16",
      "feSubnetName": "fe-subnet",
      "feSubnetPrefix": "10.0.0.0/24",
      "feLoadBalancerName": "fe-lb",
      "beSubnetName": "be-subnet",
      "beSubnetPrefix": "10.0.1.0/24",
      "publicIPAddressType": "Dynamic",
      "dnsLabelPrefixFE": "[concat(parameters('chefServerDnsPrefix'),substring(variables('prefix') ,0 ,3))]",
      "dnsLabelPrefixChefAuto": "[concat(parameters('chefAutomateDnsPrefix'),substring(variables('prefix') ,0 ,3))]",
      "diagStorageAccName": "[concat('diagstr',substring(variables('prefix') ,0 ,5))]"
    },
    "baseUrl": "[parameters('baseUrl')]",
    "keyvaultResourcesURL": "[concat(variables('baseUrl'),'nested/keyvaultResource.json')]",
    "managedDisksResourcesURL": "[concat(variables('baseUrl'),'nested/managedDisksResource.json')]",
    "diagnosticStorageAccountResourcesURL": "[concat(variables('baseUrl'),'nested/diagnosticStorageAccountResource.json')]",
    "availabilitySetSResourcesURL": "[concat(variables('baseUrl'),'nested/availabilitySetsResource.json')]",
    "publicIPAddressesResourcesURL": "[concat(variables('baseUrl'),'nested/publicIPAddressResource.json')]",
    "networkSecurityGroupsResourcesURL": "[concat(variables('baseUrl'),'nested/networkSecurityGroupsResource.json')]",
    "virtualNetworksResourcesURL": "[concat(variables('baseUrl'),'nested/virtualNetworksResource.json')]",
    "fe-loadBalancersResourcesURL": "[concat(variables('baseUrl'),'nested/loadBalancersResource.json')]",
    "fe-networkInterfacesResourcesURL": "[concat(variables('baseUrl'),'nested/fe-networkInterfacesResource.json')]",
    "be-networkInterfacesResourcesURL": "[concat(variables('baseUrl'),'nested/be-networkInterfacesResource.json')]",
    "chefAuto-networkInterfacesResourcesURL": "[concat(variables('baseUrl'),'nested/chefAuto-networkInterfacesResource.json')]",
    "fe-be-VmsWithExtensionsURL": "[concat(variables('baseUrl'),'nested/fe-be-virtualmachines-with-extensions.json')]",
    "beSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('networkSettings').virtualNetworkName, variables('networkSettings').beSubnetName)]",
    "feSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('networkSettings').virtualNetworkName, variables('networkSettings').feSubnetName)]",
    "felbPublicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('networkSettings').felbPublicIPAddressName)]",
    "chefAutoPublicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('networkSettings').chefAutoPublicIPAddressName)]",
    "prefix": "[uniqueString(subscription().subscriptionId, resourceGroup().id, deployment().name)]"
  },
  "resources": [
    {
      "name": "keyvaultResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('keyvaultResourcesURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyvaultSettings": {
            "value": "[variables('keyvaultSettings')]"
          }
        }
      }
    },
    {
      "name": "managedDisksResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('managedDisksResourcesURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "computeSettings": {
            "value": "[variables('computeSettings')]"
          }
        }
      }
    },
    {
      "name": "diagnosticStorageAccountsResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('diagnosticStorageAccountResourcesURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageSettings": {
            "value": "[variables('storageSettings')]"
          }
        }
      }
    },
    {
      "name": "availabilitySetsResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('availabilitySetSResourcesURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "computeSettings": {
            "value": "[variables('computeSettings')]"
          }
        }
      }
    },
    {
      "name": "publicIPAddressesResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('publicIPAddressesResourcesURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          }
        }
      }
    },
    {
      "name": "networkSecurityGroupsResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('networkSecurityGroupsResourcesURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          }
        }
      }
    },
    {
      "name": "virtualNetworksResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "networkSecurityGroupsResource"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('virtualNetworksResourcesURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          }
        }
      }
    },
    {
      "name": "fe-loadBalancersResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "publicIPAddressesResource"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('fe-loadBalancersResourcesURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          },
          "felbPublicIPAddressID": {
            "value": "[variables('felbPublicIPAddressID')]"
          }
        }
      }
    },
    {
      "name": "fe-networkInterfacesResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "fe-loadBalancersResource",
        "virtualNetworksResource",
        "networkSecurityGroupsResource"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('fe-networkInterfacesResourcesURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          },
          "feSubnetRef": {
            "value": "[variables('feSubnetRef')]"
          }
        }
      }
    },
    {
      "name": "be-networkInterfacesResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "virtualNetworksResource",
        "networkSecurityGroupsResource"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('be-networkInterfacesResourcesURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          },
          "beSubnetRef": {
            "value": "[variables('beSubnetRef')]"
          }
        }
      }
    },
    {
      "name": "chefAuto-networkInterfacesResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "publicIPAddressesResource",
        "virtualNetworksResource",
        "networkSecurityGroupsResource"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('chefAuto-networkInterfacesResourcesURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          },
          "feSubnetRef": {
            "value": "[variables('feSubnetRef')]"
          },
          "chefAutoPublicIPAddressID": {
            "value": "[variables('chefAutoPublicIPAddressID')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "fe-be-virtualMachinesWithExtensions",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('fe-be-VmsWithExtensionsURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "computeSettings": {
            "value": "[variables('computeSettings')]"
          },
          "networkSettings": {
            "value": "[variables('networksettings')]"
          },
          "keyvaultSettings": {
            "value": "[variables('keyvaultSettings')]"
          },
          "chefAutomateFqdn": {
            "value": "[reference('publicIPAddressesResource').outputs.chefAutomatefqdn.value]"
          },
          "chefServerFqdn": {
            "value": "[reference('publicIPAddressesResource').outputs.chefServerfqdn.value]"
          }
        }
      },
      "dependsOn": [
        "managedDisksResource",
        "diagnosticStorageAccountsResource",
        "availabilitySetsResource",
        "fe-networkInterfacesResource",
        "be-networkInterfacesResource",
        "chefAuto-networkInterfacesResource",
        "keyvaultResource"
      ]
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[variables('computeSettings').adminUsername]"
    },
    "chefServerUrl": {
      "type": "string",
      "value": "[concat('https://',reference('publicIPAddressesResource').outputs.chefServerfqdn.value)]"
    },
    "chefServerFqdn": {
      "type": "string",
      "value": "[reference('publicIPAddressesResource').outputs.chefServerfqdn.value]"
    },
    "keyvaultName": {
      "type": "string",
      "value": "[variables('keyvaultSettings').keyVaultName]"
    },
    "chefServerWebLoginUserName": {
      "type": "string",
      "value": "[variables('computeSettings').chefServerUserName]"
    },
    "chefServerWebLoginPassword": {
      "type": "string",
      "value": "The chefServerWebLoginPassword stored in the keyvault,you can retrieve it using azure CLI 2.0 [az keyvault secret show --name chefdeliveryuserpassword --vault-name < keyvaultname >]"
    },
    "chefAutomateUrl": {
      "type": "string",
      "value": "[concat('https://',reference('publicIPAddressesResource').outputs.chefAutomatefqdn.value)]"
    },
    "chefAutomateFqdn": {
      "type": "string",
      "value": "[reference('publicIPAddressesResource').outputs.chefAutomatefqdn.value]"
    },
    "chefAutomateUsername": {
      "type": "string",
      "value": "admin"
    },
    "chefAutomatePassword": {
      "type": "string",
      "value": "The chefAutomatePassword is stored in the keyvault, you can retrieve it using azure CLI 2.0 [az keyvault secret show --name chefautomateuserpassword --vault-name < keyvaultname >]"
    }
  }
}
